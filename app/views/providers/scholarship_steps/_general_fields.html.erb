<div class="row">
  <div class="field required">
    <%= f.label 'Scholarship Title' %>
    <div class="col-container">
      <%= f.text_field :title, required: true, class: "full" %>
    </div>
  </div>
</div>

<div class="row">
  <div class="field required">
    <%= f.label :description %>
    <div class="col-container">
      <%= f.text_area :description, required: true, class: "full" %>
    </div>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label :note_from_provider, 'Note to Your Applicants' %>
    <div class="col-container">
      <%= f.text_area :note_from_provider, class: "full", placeholder: 'Optionally, enter a personalized note to your applicants. Some providers cover the application process, ideal candidates, or add a simple note of encouragement.' %>
      <div class="row">
        <a href="">See Sample Note to Applicants</a>
      </div>
    </div>
  </div>
</div>

<div class="row" id="photo-row">
  <div class="field">
    <%= f.label :photo_url, 'Scholarship Banner Image' %>
    <div class="col-container">
      <div class="col">
        <div class="filepicker-wrapper">
          <input id="filepicker-input"
                class="upload-btn"
                data-fp-button-text="Choose File"
                data-fp-apikey="Aw4WfTTq8QxmplkGIzrYgz"
                data-fp-crop-ratio="3/2"
                data-fp-crop-force="true"
                data-fp-openTo="COMPUTER"
                data-fp-multiple="false"
                mimetype="image/*"
                type="filepicker"
                name="scholarship[photo_url]"
                value="<%= @scholarship.try(:photo_url) %>"
                onchange="insertFilepickerImg(event)"
                style="display: none;"
                >
        </div>
      </div>
      <div class="col">
        <div id="filepicker-img-overlay">
          <% if @scholarship.try(:photo_url) %>
            <img
              id="filepicker-img-preview"
              src="<%= @scholarship.try(:photo_url) %>"
              height="100"
              width="160"
            />
          <% else %>
            <img
              id="filepicker-img-preview"
              height="100"
              width="160"
            />
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field required">
    <%= f.label 'Scholarship Cycle' %>
    <div class="col-container">
      <div class="col">
        <%= f.text_field :cycle_start, class: "", id: "cycle-start", placeholder: 'Start Date', value: @scholarship.cycle_start_str, required: true %>
      </div>
      <div class="col">
        <%= f.text_field :cycle_end, class: "", id: "cycle-end", placeholder: 'End Date', value: @scholarship.cycle_end_str, required: true %>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label 'Number of Awards' %>
    <div class="col-container">
      <div class="col">
        <%= number_field_tag :num_awards, (award_count = @scholarship.awards.count; award_count == 0 ? award_count + 1 : award_count ), step: 1, min: 0, placeholder: 'e.g., 3', id: "num-awards-field", oninput: 'setAssociationFields()' %>
      </div>
    </div>
  </div>
</div>

<div id="awards">
  <% if @scholarship.awards.count > 0 %>
    <% @scholarship.awards.each.with_index do |award, i| %>
      <%= f.fields_for :awards, award do |award_fields| %>
        <%= render 'providers/scholarship_steps/award_fields', f: award_fields, i: i %>
      <% end %>
    <% end %>
  <% else %>
    <%= f.fields_for :awards, @scholarship.awards.build do |award_fields| %>
      <%= render 'providers/scholarship_steps/award_fields', f: award_fields, i: @scholarship.awards.count %>
    <% end %>
  <% end %>
  <div class="add-association-container hidden">
    <%= link_to_add_association "Add another Award to your Scholarship",
                                f,
                                :awards,
                                {
                                  partial: 'providers/scholarship_steps/award_fields',
                                  render_options: {
                                    locals: {
                                      i: @scholarship.awards.count
                                    },
                                  },
                                  data: {
                                    'association-insertion-method' => 'before'
                                  },
                                  class: 'add-association-link'
                                }
    %>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label :renewable, 'Renewable Scholarship?' %>
    <div class="col-container">
      <div class="col">
        <div class="half-col">
          <%= f.radio_button :renewable, true %>
          <%= f.label 'Yes', class: "inline-label" %>
        </div>
        <div class="half-col">
          <%= f.radio_button :renewable, false %>
          <%= f.label 'No', class: "inline-label" %>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label :minimum_age, 'Minimum Age' %>
    <div class="col-container">
      <div class="col">
        <%= f.number_field :minimum_age, placeholder: 15 %>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label :gpa, 'Minimum GPA' %>
    <div class="col-container">
      <div class="col">
        <%= f.number_field :gpa, step: 0.01, placeholder: '0.0' %>
      </div>
      <div class="comment col">
        All GPAs are unweighted
      </div>
      <div class="comment col">
        Skip if you do not have a minimum GPA requirement
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label :min_scores, 'Minimum Composite Test Scores' %>
    <div class="col-container">
      <div class="col">
        <%= f.number_field :minimum_sat_score, placeholder: 'SAT Score' %>
      </div>
      <div class="col">
        <%= f.number_field :minimum_act_score, placeholder: 'ACT Score' %>
      </div>
      <div class="comment col">
        Skip if you do not have score requirements
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label :flexible_scores, 'Flexible on GPA and SAT scores?' %>
    <div class="col-container">
      <div class="col">
        <div class="half-col">
          <%= f.radio_button :flexible_scores, true %>
          <%= f.label 'Yes', class: "inline-label" %>
        </div>
        <div class="half-col">
          <%= f.radio_button :flexible_scores, false %>
          <%= f.label 'No', class: "inline-label" %>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field">
    <%= f.label :generic_recommendation, "Accept Standard Recommendations?" %>
    <div class="col-container">
      <div class="col">
        <div class="half-col">
          <%= f.label 'Yes', class: "inline-label" %> <%= f.radio_button :generic_recommendation, true %>
        </div>
        <div class="half-col">
          <%= f.label 'No', class: "inline-label" %>  <%= f.radio_button :generic_recommendation, false %>
        </div>
      </div>
      <div class="comment col">
        Why Accept a Generic<br>Recommendation?
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="field required">
    <%= f.label :minimum_recommendations, 'Number of Required Recommendations' %>
    <div class="col-container">
      <div class="col">
        <%= f.number_field :minimum_recommendations, placeholder: 0, required: true %>
      </div>
      <div class="comment col">
        Skip if you do not require a recommendation
      </div>
    </div>
  </div>
</div>

<div class="field hidden">
  <%= f.hidden_field :completed_step_general, value: true %>
</div>

<script type="text/javascript">
  $(function () {
    $('#cycle-start').datetimepicker({
      format: 'L'
    });
    $('#cycle-end').datetimepicker({
      format: 'L'
    });
  });
</script>

<script type="text/javascript">
  // Make Filepicker widget play nice with Turbolinks
  function setupFilepicker() {
    var $filepickerInputs = $('#filepicker-input');
    for (var i = 0; i < $filepickerInputs.length; i++) {
      var $uploadBtns = $('button.upload-btn');
      if ($uploadBtns.length <= i) {
        filepicker.constructWidget($filepickerInputs[i]);
      }
    }
  }

  function insertFilepickerImg(event) {
    var $filepickerImg = $('#filepicker-img-preview');
    $filepickerImg.toggleClass('fade');
    $filepickerImg.attr('src', event.fpfile.url);
    $filepickerImg.toggleClass('fade');
  }

  // TODO: Improve. Original filepicker widget needs to initialize before we can check
  //       for presence, so use a timeout. Manage the widget initialization differently
  //       so we can control mounting, then remount for turbolinks.
  //  The correct way to solve this may be to remove turbolinks, or initialize the widget
  //  manually, so we can trigger it and not deal with two. Look into that.
  // Try: https://www.filepicker.com/docs/file-ingestion/javascript-api/pick?v=v2.
  // See: filepicker.pickAndStore()
  $(document).on('turbolinks:load', function () { setTimeout(setupFilepicker, 5000) });
</script>

<script type="text/javascript">
  /*
   * Set the essay number for each association label.
   * @param assocContainerId {String} :: the ID of the top-level element that contains
   *  the .nested-fields associations
   *
   * Notes:
   * Gross javascript but there is no way to do this on server-side with added associations.
   * Currently uses callback hooks for before/after insertion provided by Cocoon gem.
   * Feel free to refactor :/.
   * Comment Author: FK
   */
  function replaceAssociationIndices(assocContainerId) {
    var elsToMod = $(assocContainerId + ' .nested-fields.association-container');

    $(elsToMod).each(function (i, association) {
      // Replace the string `{Association}#_` within all `label` and `a` tags.
      $(association).find('label, a').each(function (_j, el) {
        var currentText = $(el).html();
        $(el).html(
          // start indices at 1.
          currentText.replace(/Award #\d/g, "Award #" + (i + 1))
        );
      });
    });
  }

  $(document).ready(function () {
    $('#awards')
      .on('cocoon:after-insert', function (_e, _el) {
        replaceAssociationIndices('#awards');
      })
      .on('cocoon:after-remove', function (_e, _el) {
        replaceAssociationIndices('#awards');
      });
  });
</script>

<script type="text/javascript">
  function setAssociationFields() {
    var numAssociationsDesired = parseInt(
      $('#num-awards-field').val()
    );
    var $associationFields = $('#awards .association-container');

    /*
     * 1. If more fields desired,
     *    Undelete any associations that have been previously deleted.
     *    (Up to the number of desired fields.)
     */
    for (var i = 0; i < numAssociationsDesired; i++) {
      $associationFields
        .eq(i)
        .find('.delete-association-btn-container input[type="hidden"][value="1"]')
        .val('false');

      $associationFields
        .eq(i)
        .attr('style', '');
    }

    /*
     * 2. If more fields desired,
     *    Add any additional fields needed, after undeleting existing, hidden fields.
     */
    if (numAssociationsDesired > $associationFields.length) {
      for (var i = $associationFields.length; i < numAssociationsDesired; i++) {
        $('#awards .add-association-link')
          .click();
      }
    /*
     * 3. If fewer fields desired,
     *    Delete the excess fields.
     *    - Will mark delete if is a previously saved association
     *    - Or just remove if is newly created assoication input.
     */
    } else if (numAssociationsDesired < $associationFields.length) {
        $associationFields
          .slice(numAssociationsDesired, $associationFields.length)
          .find('a.delete-association-btn.remove_fields')
          .click();
    }

    return false;
  }
</script>

